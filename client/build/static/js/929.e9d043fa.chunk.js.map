{"version":3,"file":"static/js/929.e9d043fa.chunk.js","mappings":"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","sources":["components/CustomFields/TextField.tsx","pages/Login/index.tsx"],"sourcesContent":["import MuiTextField, { TextFieldProps } from '@mui/material/TextField';\nimport { FieldInputProps, FormikProps } from 'formik';\nimport { get, isString } from 'lodash';\nimport { ChangeEvent } from 'react';\n\ninterface Props {\n  field: FieldInputProps<any>;\n  form: FormikProps<any>;\n  afterOnChange?: (e: ChangeEvent) => void;\n}\n\nconst TextField = ({ field, form, afterOnChange, ...props }: Props & TextFieldProps) => {\n  const { name, value, onBlur, onChange } = field || {};\n  const { errors, touched } = form || {};\n\n  const msgError = get(touched, name) && get(errors, name) ? get(errors, name) : '';\n\n  const onHandleChange = (e: ChangeEvent) => {\n    onChange(e);\n    afterOnChange && afterOnChange(e);\n  };\n\n  return (\n    <MuiTextField\n      name={name}\n      value={value}\n      onBlur={onBlur}\n      onChange={onHandleChange}\n      error={!!msgError}\n      helperText={isString(msgError) && msgError}\n      variant='standard'\n      sx={{\n        '& label': {},\n        '& input': {},\n      }}\n      {...props}\n    />\n  );\n};\n\nexport default TextField;\n","import React from 'react';\nimport CommonIcons from 'components/CommonIcons';\nimport CommonStyles from 'components/CommonStyles';\nimport { FastField, Form, Formik } from 'formik';\nimport { useTheme } from '@mui/material';\nimport TextField from 'components/CustomFields/TextField';\nimport * as Yup from 'yup';\nimport { showError } from 'helpers/toast';\nimport { useAuth } from 'providers/AuthenticationProvider';\nimport { Navigate } from 'react-router-dom';\nimport BaseUrl from 'consts/baseUrl';\n\nconst validationLoginSchema = Yup.object().shape({\n  username: Yup.string().required('Username is required field!'),\n  password: Yup.string().required('Password is required field!'),\n});\n\nconst Login = () => {\n  //! State\n  const auth = useAuth();\n  const theme = useTheme();\n  const { login } = useAuth();\n\n  //! Function\n\n  //! Render\n  if (auth.isLogged) {\n    return <Navigate to={BaseUrl.Homepage} />;\n  }\n\n  return (\n    <CommonStyles.Box\n      className='component:Login'\n      sx={{\n        width: '100%',\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: theme.colors?.purple,\n        p: 2,\n      }}\n    >\n      <Formik\n        initialValues={{ username: '', password: '' }}\n        validationSchema={validationLoginSchema}\n        onSubmit={(values, { setSubmitting }) => {\n          try {\n            const { username, password } = values;\n            setSubmitting(true);\n            login({ username, password });\n            setSubmitting(false);\n          } catch (error) {\n            showError(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting }) => {\n          return (\n            <CommonStyles.Box\n              sx={{\n                boxShadow: 2,\n                p: 2,\n                borderRadius: 1,\n                backgroundColor: theme.colors?.white,\n                width: 450,\n              }}\n            >\n              <Form>\n                <CommonStyles.Typography variant='h6' sx={{ mb: 2 }}>\n                  Sign in with your username and password (don/don)\n                </CommonStyles.Typography>\n\n                <CommonStyles.Box\n                  sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    '& > div': {\n                      mb: 2,\n                    },\n                  }}\n                >\n                  <FastField component={TextField} name='username' label='Username' fullWidth />\n                  <FastField\n                    component={TextField}\n                    name='password'\n                    label='Password'\n                    type='password'\n                    fullWidth\n                  />\n                </CommonStyles.Box>\n\n                <CommonStyles.Button\n                  type='submit'\n                  loading={isSubmitting}\n                  fullWidth\n                  startIcon={<CommonIcons.SendIcon />}\n                >\n                  Sign in\n                </CommonStyles.Button>\n              </Form>\n            </CommonStyles.Box>\n          );\n        }}\n      </Formik>\n    </CommonStyles.Box>\n  );\n};\n\nexport default React.memo(Login);\n"],"names":["_ref","field","form","afterOnChange","props","_objectWithoutProperties","_excluded","_ref2","name","value","onBlur","onChange","_ref3","errors","touched","msgError","get","_jsx","MuiTextField","_objectSpread","e","error","helperText","isString","variant","sx","validationLoginSchema","Yup","shape","username","required","password","Login","_theme$colors","auth","useAuth","theme","useTheme","login","isLogged","Navigate","to","BaseUrl","CommonStyles","className","width","height","display","justifyContent","alignItems","backgroundColor","colors","purple","p","children","Formik","initialValues","validationSchema","onSubmit","values","setSubmitting","showError","_theme$colors2","isSubmitting","boxShadow","borderRadius","white","_jsxs","Form","mb","flexDirection","FastField","component","TextField","label","fullWidth","type","loading","startIcon","CommonIcons","React"],"sourceRoot":""}