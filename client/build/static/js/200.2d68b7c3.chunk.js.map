{"version":3,"file":"static/js/200.2d68b7c3.chunk.js","mappings":"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","sources":["hooks/useHandleAsideMenu.ts","hooks/useCheckWidth.ts","layouts/DefaultLayout.tsx"],"sourcesContent":["import CommonIcons from 'components/CommonIcons';\nimport BaseUrl from 'consts/baseUrl';\n\nconst useHandleAsideMenu = () => {\n  return [\n    [\n      {\n        label: 'Homepage',\n        icon: CommonIcons.HomeIcon,\n        href: BaseUrl.Homepage,\n      },\n\n      {\n        label: 'Base64',\n        icon: CommonIcons.Dataset,\n        href: BaseUrl.Base64,\n      },\n    ],\n  ];\n};\n\nexport default useHandleAsideMenu;\n","import { useEffect, useState } from 'react';\nimport { useTheme } from '@mui/material/styles';\n\nconst useCheckWidth = () => {\n  const theme = useTheme();\n  const [windowSize, setWindowSize] = useState({\n    width: 0,\n    height: 0,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener('resize', handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return {\n    windowSize,\n    isMobile: windowSize.width <= theme.breakpoints.values.sm,\n  };\n};\n\nexport default useCheckWidth;\n","import * as React from 'react';\nimport { Suspense } from 'react';\nimport { styled, useTheme, Theme, CSSObject } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport MuiDrawer from '@mui/material/Drawer';\n// import MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport CommonStyles from 'components/CommonStyles';\nimport CommonIcons from 'components/CommonIcons';\nimport { NavLink } from 'react-router-dom';\nimport useHandleAsideMenu from 'hooks/useHandleAsideMenu';\nimport useCheckWidth from 'hooks/useCheckWidth';\nimport { useAuth } from 'providers/AuthenticationProvider';\n\nconst drawerWidth = 90;\n\nconst openedMixin = (theme: Theme): CSSObject => ({\n  width: drawerWidth,\n  transition: theme.transitions.create('width', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen,\n  }),\n  overflowX: 'hidden',\n});\n\nconst closedMixin = (theme: Theme): CSSObject => ({\n  transition: theme.transitions.create('width', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  overflowX: 'hidden',\n  width: `calc(${theme.spacing(7)} + 1px)`,\n  [theme.breakpoints.up('sm')]: {\n    width: `calc(${theme.spacing(8)} + 1px)`,\n  },\n});\n\n// const DrawerHeader = styled('div')(({ theme }) => ({\n//   display: 'flex',\n//   alignItems: 'center',\n//   justifyContent: 'flex-end',\n//   padding: theme.spacing(0, 1),\n//   // necessary for content to be below app bar\n//   ...theme.mixins.toolbar,\n// }));\n\n// interface AppBarProps extends MuiAppBarProps {\n//   open?: boolean;\n// }\n\n// const AppBar = styled(MuiAppBar, {\n//   shouldForwardProp: (prop) => prop !== 'open',\n// })<AppBarProps>(({ theme, open }) => ({\n//   zIndex: theme.zIndex.drawer + 1,\n//   transition: theme.transitions.create(['width', 'margin'], {\n//     easing: theme.transitions.easing.sharp,\n//     duration: theme.transitions.duration.leavingScreen,\n//   }),\n//   ...(open && {\n//     marginLeft: drawerWidth,\n//     width: `calc(100% - ${drawerWidth}px)`,\n//     transition: theme.transitions.create(['width', 'margin'], {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.enteringScreen,\n//     }),\n//   }),\n// }));\n\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n  ({ theme, open }) => ({\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n    boxSizing: 'border-box',\n    ...(open && {\n      ...openedMixin(theme),\n      '& .MuiDrawer-paper': openedMixin(theme),\n    }),\n    ...(!open && {\n      ...closedMixin(theme),\n      '& .MuiDrawer-paper': closedMixin(theme),\n    }),\n  })\n);\n\nconst DefaultLayout = ({ children }: { children: React.ReactNode }) => {\n  //! State\n  const auth = useAuth();\n  const theme = useTheme();\n  const [\n    open,\n    // setOpen\n  ] = React.useState(true);\n  const asideMenu = useHandleAsideMenu();\n  const { isMobile } = useCheckWidth();\n\n  //! Function\n  // const handleDrawerOpen = () => {\n  //   setOpen(true);\n  // };\n\n  // const handleDrawerClose = () => {\n  //   setOpen(false);\n  // };\n\n  // const customStyleHeader = React.useMemo(() => {\n  //   return {\n  //     [theme.breakpoints.up('xs')]: {\n  //       minHeight: 0,\n  //       height: 50,\n  //     },\n  //   };\n  // }, [theme]);\n\n  //! Render\n  // const renderAppBar = () => {\n  //   return (\n  //     <Typography variant='h6' noWrap component='div'>\n  //       Custom header here\n  //     </Typography>\n  //   );\n  // };\n\n  const renderBtnLogout = () => {\n    return (\n      <List>\n        <ListItem disablePadding sx={{ display: 'block' }}>\n          <ListItemButton\n            onClick={() => {\n              auth.logout();\n            }}\n            sx={{\n              minHeight: 48,\n              justifyContent: open ? 'initial' : 'center',\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <ListItemIcon\n              sx={{\n                minWidth: 0,\n                justifyContent: 'center',\n                color: theme.colors?.white,\n              }}\n            >\n              <CommonIcons.LogoutIcon />\n            </ListItemIcon>\n            <CommonStyles.Typography\n              sx={{\n                opacity: open ? 1 : 0,\n                fontSize: '0.825rem',\n                pt: 0.5,\n                color: theme.colors?.white,\n              }}\n            >\n              Logout\n            </CommonStyles.Typography>\n          </ListItemButton>\n        </ListItem>\n      </List>\n    );\n  };\n\n  const renderAsideMenu = () => {\n    return asideMenu.map((eachList, idxEachList) => {\n      return (\n        <React.Fragment key={`${idxEachList}`}>\n          <List\n            key={`${idxEachList}`}\n            sx={{\n              maxHeight: '92vh',\n              overflow: 'auto',\n              [theme.breakpoints.down('sm')]: {\n                display: 'flex',\n              },\n            }}\n          >\n            {eachList.map((menu) => {\n              return (\n                <NavLink\n                  key={menu.label}\n                  to={menu.href}\n                  style={{ textDecoration: 'none', color: 'inherit' }}\n                >\n                  <ListItem disablePadding sx={{ display: 'block' }}>\n                    <ListItemButton\n                      sx={{\n                        minHeight: 48,\n                        justifyContent: open ? 'initial' : 'center',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                      }}\n                    >\n                      <ListItemIcon\n                        sx={{\n                          minWidth: 0,\n                          justifyContent: 'center',\n                          color: theme.colors?.white,\n                        }}\n                      >\n                        <menu.icon />\n                      </ListItemIcon>\n                      <CommonStyles.Typography\n                        sx={{\n                          opacity: open ? 1 : 0,\n                          fontSize: '0.825rem',\n                          pt: 0.5,\n                          color: theme.colors?.white,\n                          whiteSpace: 'pre-wrap',\n                          textAlign: 'center',\n                        }}\n                      >\n                        {menu.label}\n                      </CommonStyles.Typography>\n                    </ListItemButton>\n                  </ListItem>\n                </NavLink>\n              );\n            })}\n          </List>\n          {idxEachList !== asideMenu.length - 1 && <Divider />}\n        </React.Fragment>\n      );\n    });\n  };\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      {/* <AppBar position='fixed' open={open}>\n        <Toolbar sx={customStyleHeader}>\n          <CommonStyles.Button\n            isIconButton\n            color='inherit'\n            aria-label='open drawer'\n            onClick={handleDrawerOpen}\n            edge='start'\n            sx={{\n              marginRight: 5,\n              ...(open && { display: 'none' }),\n            }}\n          >\n            <CommonIcons.MenuIcon />\n          </CommonStyles.Button>\n\n          {renderAppBar()}\n        </Toolbar>\n      </AppBar> */}\n\n      <Drawer\n        variant='permanent'\n        open={open}\n        anchor={isMobile ? 'top' : undefined}\n        sx={{\n          [theme.breakpoints.down('sm')]: {\n            width: '0px',\n          },\n          '& > div': {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-between',\n            backgroundColor: theme?.palette.primary.main,\n\n            [theme.breakpoints.down('sm')]: {\n              width: '100% !important',\n              flexDirection: 'row',\n            },\n          },\n        }}\n      >\n        {renderAsideMenu()}\n      </Drawer>\n\n      <Box component='main' sx={{ flexGrow: 1, p: 3 }}>\n        {/* <DrawerHeader /> */}\n        <Suspense fallback={<CommonStyles.Loading />}>{children}</Suspense>\n      </Box>\n    </Box>\n  );\n};\n\nexport default React.memo(DefaultLayout);\n"],"names":["label","icon","CommonIcons","href","BaseUrl","theme","useTheme","_useState","useState","width","height","_useState2","_slicedToArray","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","isMobile","breakpoints","values","sm","openedMixin","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","closedMixin","_defineProperty","leavingScreen","concat","spacing","up","Drawer","styled","MuiDrawer","shouldForwardProp","prop","_ref2","open","_objectSpread","flexShrink","whiteSpace","boxSizing","DefaultLayout","_ref3","_ref5","children","useAuth","_React$useState","React","asideMenu","useHandleAsideMenu","useCheckWidth","_jsxs","Box","sx","display","_jsx","variant","anchor","undefined","down","flexDirection","justifyContent","backgroundColor","palette","primary","main","map","eachList","idxEachList","List","maxHeight","overflow","menu","_theme$colors3","_theme$colors4","NavLink","to","style","textDecoration","color","ListItem","disablePadding","ListItemButton","minHeight","alignItems","ListItemIcon","minWidth","colors","white","CommonStyles","opacity","fontSize","pt","textAlign","length","Divider","component","flexGrow","p","Suspense","fallback"],"sourceRoot":""}